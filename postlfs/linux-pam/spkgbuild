# description   : The Linux PAM package contains Pluggable Authentication Modules used by the local system administrator to control how application programs authenticate users
# depends       : shadow libpwquality

name=linux-pam
version=1.7.1    
release=1
source="https://github.com/linux-pam/linux-pam/releases/download/v$version/Linux-PAM-$version.tar.xz
https://anduin.linuxfromscratch.org/BLFS/Linux-PAM/Linux-PAM-$version-docs.tar.xz
https://anduin.linuxfromscratch.org/BLFS/bdb/db-5.3.28.tar.gz"

options="!checksum"

build() {
    cd $name-$version
    
    sed -e "s/'elinks'/'lynx'/"                       \
    -e "s/'-no-numbering', '-no-references'/      \
    '-force-html', '-nonumbers', '-stdin'/" \
    -i meson.build
    mkdir build 
    cd    build 
    meson setup ..        \
    --prefix=/usr       \
    --buildtype=release \
    -D docdir=/usr/share/doc/Linux-PAM-$version 
    ninja
    install -v -m755 -d /etc/pam.d 
cat > $PKG/etc/pam.d/other << "EOF"
    auth     required       pam_deny.so
    account  required       pam_deny.so
    password required       pam_deny.so
    session  required       pam_deny.so
EOF
    rm -fv /etc/pam.d/other
    DESTDIR=$PKG ninja install 
    chmod -v 4755 /usr/sbin/unix_chkpwd
    rm -rf /usr/lib/systemd
    tar -C / -xvf ../../Linux-PAM-$version-docs.tar.xz
    install -vdm755 /etc/pam.d 
cat > $PKG/etc/pam.d/system-account << "EOF" 
    # Begin /etc/pam.d/system-account
    account   required    pam_unix.so
    # End /etc/pam.d/system-account
EOF
cat > $PKG/etc/pam.d/system-auth << "EOF" 
    # Begin /etc/pam.d/system-auth
    auth      required    pam_unix.so
    # End /etc/pam.d/system-auth
EOF
cat > $PKG/etc/pam.d/system-session << "EOF" 
    # Begin /etc/pam.d/system-session
    session   required    pam_unix.so
    # End /etc/pam.d/system-session
EOF
cat > $PKG/etc/pam.d/system-password << "EOF"
    # Begin /etc/pam.d/system-password
    # use yescrypt hash for encryption, use shadow, and try to use any
    # previously defined authentication token (chosen password) set by any
    # prior module.
    password  required    pam_unix.so       yescrypt shadow try_first_pass
    # End /etc/pam.d/system-password
EOF
cat > $PKG/etc/pam.d/other << "EOF"
    # Begin /etc/pam.d/other
    auth        required        pam_warn.so
    auth        required        pam_deny.so
    account     required        pam_warn.so
    account     required        pam_deny.so
    password    required        pam_warn.so
    password    required        pam_deny.so
    session     required        pam_warn.so
    session     required        pam_deny.so
    # End /etc/pam.d/other
EOF
}
