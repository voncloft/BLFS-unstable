# description   : The Rust programming language is designed to be a safe, concurrent, practical language
# depends       : cmake curl libssh2 llvm sqlite

name=rustc
version=1.89.0    
release=1
source="https://static.rust-lang.org/dist/rustc-$version-src.tar.xz"

options="!checksum"

build() {
    cd $name-$version
    
    cat << EOF > bootstrap.toml
EOF
    [ ! -e /usr/include/libssh2.h ] || export LIBSSH2_SYS_USE_PKG_CONFIG=1
    [ ! -e /usr/include/sqlite3.h ] || export LIBSQLITE3_SYS_USE_PKG_CONFIG=1
    ./x.py build
    ./x.py test --verbose --no-fail-fast | tee rustc-testlog
    grep '^test result:' rustc-testlog |
    awk '{sum1 += $4; sum2 += $6} END { print sum1 " passed; " sum2 " failed" }'
    unset LIB{SSH2,SQLITE3}_SYS_USE_PKG_CONFIG
    source /etc/profile.d/rustc.sh
    mkdir -pv /opt/rustc-$version      
    ln -svfn rustc-$version /opt/rustc
    ./x.py install
    rm -fv /opt/rustc-$version/share/doc/rustc-$version/*.old   
    install -vm644 README.md                                \
    /opt/rustc-$version/share/doc/rustc-$version 
    install -vdm755 /usr/share/zsh/site-functions      
    ln -sfv /opt/rustc/share/zsh/site-functions/_cargo \
    /usr/share/zsh/site-functions
    mv -v /etc/bash_completion.d/cargo /usr/share/bash-completion/completions
cat > $PKG/etc/profile.d/rustc.sh << "EOF"
    # Begin /etc/profile.d/rustc.sh
    pathprepend /opt/rustc/bin           PATH
    # End /etc/profile.d/rustc.sh
EOF
}
