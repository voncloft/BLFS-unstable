# description   : The LLVM package contains a collection of modular and reusable compiler and toolchain technologies
# depends       : cmake

name=llvm
version=20.1.8    
release=1
source="https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/llvm-$version.src.tar.xz
https://anduin.linuxfromscratch.org/BLFS/llvm/llvm-cmake-$version.src.tar.xz
https://anduin.linuxfromscratch.org/BLFS/llvm/llvm-third-party-$version.src.tar.xz
https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/clang-$version.src.tar.xz
https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/compiler-rt-$version.src.tar.xz"

options="!checksum"

build() {
    cd $name-$version
    
    tar -xf ../llvm-cmake-$version.src.tar.xz                              
    tar -xf ../llvm-third-party-$version.src.tar.xz                        
    sed '/LLVM_COMMON_CMAKE_UTILS/s@../cmake@cmake-$version.src@'          \
    -i CMakeLists.txt                                                
    sed '/LLVM_THIRD_PARTY_DIR/s@../third-party@third-party-$version.src@' \
    -i cmake/modules/HandleLLVMOptions.cmake
    tar -xf ../clang-$version.src.tar.xz -C tools 
    mv tools/clang-$version.src tools/clang
    tar -xf ../compiler-rt-$version.src.tar.xz -C projects    
    mv projects/compiler-rt-$version.src projects/compiler-rt
    grep -rl '#!.*python' | xargs sed -i '1s/python$/python3/'
    sed 's/utility/tool/' -i utils/FileCheck/CMakeLists.txt
    mkdir -v build 
    cd       build 
    CC=gcc CXX=g++                               \
    cmake -D CMAKE_INSTALL_PREFIX=/usr           \
    -D CMAKE_SKIP_INSTALL_RPATH=ON         \
    -D LLVM_ENABLE_FFI=ON                  \
    -D CMAKE_BUILD_TYPE=Release            \
    -D LLVM_BUILD_LLVM_DYLIB=ON            \
    -D LLVM_LINK_LLVM_DYLIB=ON             \
    -D LLVM_ENABLE_RTTI=ON                 \
    -D LLVM_TARGETS_TO_BUILD="host;AMDGPU" \
    -D LLVM_BINUTILS_INCDIR=/usr/include   \
    -D LLVM_INCLUDE_BENCHMARKS=OFF         \
    -D CLANG_DEFAULT_PIE_ON_LINUX=ON       \
    -D CLANG_CONFIG_FILE_SYSTEM_DIR=/etc/clang \
    -W no-dev -G Ninja ..                  
    ninja
    sed -e 's/config.has_no_default_config_flag/True/' \
    -e 's/"-fuse-ld=gold"//'                       \
    -i ../projects/compiler-rt/test/lit.common.cfg.py
    sh -c 'ulimit -c 0  ninja check-all'
    DESTDIR=$PKG ninja install
    mkdir -pv /etc/clang 
    for i in clang clang++; do
    echo -fstack-protector-strong > /etc/clang/$i.cfg
    done
}
